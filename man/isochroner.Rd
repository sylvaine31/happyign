% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/isochroner.R
\name{isochroner}
\alias{isochroner}
\title{Calcul isochrones/isodistances}
\usage{
isochroner(
  sf_object,
  q = 10,
  crs = 4326,
  costType = "time",
  profile = "pedestrian",
  timeUnit = "minute",
  distanceUnit = "kilometer",
  direction = "departure",
  resource = "bdtopo-iso",
  constraints = NULL
)
}
\arguments{
\item{sf_object}{Un objet sf avec une géométrie de type POINT, dont la colonne de geometry s'appelle "geometry".
Il peut y avoir plusieurs points dans l'objet. Dans ce cas, la sortie comprendra autant de polygones que de points.}

\item{q}{Une quantité de temps ou de distance (10 par défaut).}

\item{crs}{Le crs souhaité en sortie (EPSG:4326 par défaut).}

\item{costType}{Précise le type de calcul qui est fait : "time" pour les isochrone
ou "distance" pour les isodistance (isochrones par défaut)}

\item{profile}{Type du coût utilisé pour le calcul : "pedestrian" pour les
piétons et "car" pour les voitures (Piéton par défaut).}

\item{timeUnit}{Permet de préciser l’unité dans laquelle les durées sont
exprimées dans la réponse : "hour", "minute" ou "second" (minutes par défaut)}

\item{distanceUnit}{Permet de préciser l’unité dans laquelle les distances
sont exprimées dans la réponse : "meter" ou "kilometer" (meter par défaut)}

\item{direction}{Sens du parcours. Soit on définit un point de départ
("departure") et on obtient les points d'arrivée potentiels.
Soit on définit un point d'arrivée ("arrival") et on obtient les points de
départ potentiels (departure par défaut)}

\item{resource}{Ce paramètre permet de préciser quelle ressource sera utilisée
pour le calcul. Actuellement, les ressources de type " ISO " et " PGR "
sont disponibles pour l’isochrone(par défaut "bdtopo-iso"). Voir section \code{RESOURCE}}

\item{constraints}{Permet d’exprimer des contraintes sur les caractéristiques
du réseau routier pour le calcul d’isochrones/isodistances. Voir section \code{CONSTRAINTS}.}
}
\value{
Un objet sf de type POLYGON
}
\description{
Calcule les isochrones ou isodistances en France à partir d'un objet sf à l'aide de l'API de l'IGN
de la plateforme Géoportail. Les données de référence proviennent de la base de données
IGN BD TOPO®. Pour plus d'informations : https://geoservices.ign.fr/documentation/services/api-et-services-ogc/isochrone/api
}
\section{RESOURCE}{


Le calcul d’isochrones s’appuie sur les mêmes ressources que celles du calcul d’itinéraire.
Les ressources de type "PGR" et "ISO" sont utilisées, à savoir "bdtopo-iso" et "bdtopo-pgr".
\itemize{
\item "bdtopo-pgr" se base uniquement sur le nouveau moteur, mais manque de performance sur de grandes isochrones.
Elle est en revanche fonctionelle pour de petites isochrones.
\item "bdtopo-iso" se base sur les anciens services à partir d'une certaine distance pour régler les soucis de performance.
Nous vous conseillons son utilisation pour les isochrones larges.
}

Les ressources PGR sont les ressources qui utilisent le moteur PGRouting pour calculer les isochrones.
Les ressources ISO sont des ressources plus génériques.
Le moteur utilisé pour les calculs varie en fonction de plusieurs paramètres.
À l'heure actuelle, le paramètre concerné est costValue, il s'agit du temps demandé ou de la distance demandée.
}

\section{CONSTRAINTS}{


Une contrainte s’exprime ainsi :
\itemize{
\item la caractéristique (" key ") du réseau routier sur laquelle elle s’applique.
\item son type : actuellement, un seul : " banned " (exclusion)
\item un opérateur de comparaison
\item une valeur permettant d’exprimer la contrainte associée à la caractéristique
}

Exemple : exclure d’emprunter les tronçons de route passant par des tunnels :
\itemize{
\item " key " = " wayType "
\item type " = " banned "
\item Opérateur de comparaison = " = "
\item Valeur = " tunnel "
}

Donne la requête suivante :

constraints={"constraintType":"banned","key":"wayType","operator":"=","value":"tunnel"}

L’éventail des contraintes possibles varie selon les ressources. Il est indiqué dans les capacités du service.
}

\examples{
points <- data.frame(x = c(1.3,1.4,1.5), y = c(43.5, 43.4, 43.6))
points_sf <- sf::st_as_sf(points, coords = c("x","y"), crs = 4326)
isochroner(points_sf, crs = 3943)

}
